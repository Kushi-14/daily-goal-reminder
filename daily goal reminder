import java.util.*;
import java.text.*;

public class apnacollege {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Timer timer = new Timer();
        List<String> tasks = new ArrayList<>();

        System.out.print("How many goals do you want to set today? ");
        int count = Integer.parseInt(scanner.nextLine());

        for (int i = 0; i < count; i++) {
            System.out.print("\nEnter goal " + (i + 1) + ": ");
            String task = scanner.nextLine();
            System.out.print("Enter time for this goal (hh:mm AM/PM): ");
            String timeInput = scanner.nextLine();

            try {
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a");
                sdf.setLenient(false);
                Date reminderTime = sdf.parse(timeInput);

                // Adjust reminder date to today
                Calendar now = Calendar.getInstance();
                Calendar target = Calendar.getInstance();
                target.setTime(reminderTime);
                target.set(Calendar.DAY_OF_MONTH, now.get(Calendar.DAY_OF_MONTH));
                target.set(Calendar.MONTH, now.get(Calendar.MONTH));
                target.set(Calendar.YEAR, now.get(Calendar.YEAR));

                long delay = target.getTimeInMillis() - now.getTimeInMillis();

                if (delay < 0) {
                    System.out.println(" Time already passed for this goal. Skipping it.");
                    continue;
                }

                timer.schedule(new TimerTask() {
                    public void run() {
                        System.out.println("\n Reminder: " + task);
                    }
                }, delay);

                tasks.add(task);

            } catch (ParseException e) {
                System.out.println(" Invalid time format. Please use hh:mm AM/PM format.");
            }
        }

        System.out.println("\n All reminders set. Keep this app running to receive them.");

        // Keep app running
        while (true) {
            try {
                Thread.sleep(60000); // sleep for 1 minute
            } catch (InterruptedException e) {
                break;
            }
        }

        scanner.close();
    }
}
